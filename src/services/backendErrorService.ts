import { ErrorDetails } from "./errorService";
import { useModal } from "../hooks/useModal";

export interface BackendErrorResponse {
    message: string;
    code?: string;
    statusCode?: number;
    field?: string;
    details?: any;
}

export class BackendErrorService {
    /**
     * –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
     */
    static handleRegistrationError(
        error: BackendErrorResponse,
        modal: ReturnType<typeof useModal>
    ) {
        const { message, code, statusCode } = error;

        // Email —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        if (
            statusCode === 409 ||
            code === "EMAIL_EXISTS" ||
            message.includes("—É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç") ||
            message.includes("already exists")
        ) {
            modal.showError(
                "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ç–∞–∫–∏–º email —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω. –í—ã –º–æ–∂–µ—Ç–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–∞—Ä–æ–ª—å, –µ—Å–ª–∏ –∑–∞–±—ã–ª–∏ –µ–≥–æ.",
                {
                    title: "Email —É–∂–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è",
                    buttonText: "–í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–∞—Ä–æ–ª—å",
                    onButtonPress: () => {
                        modal.hide();
                        // –ù–∞–≤–∏–≥–∞—Ü–∏—è –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∞ —á–µ—Ä–µ–∑ callback –≤ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–µ
                    },
                }
            );
            return true;
        }

        // –û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏
        if (statusCode === 422 || code === "VALIDATION_ERROR") {
            modal.showError(message, {
                title: "–û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏",
                buttonText: "–ò—Å–ø—Ä–∞–≤–∏—Ç—å",
            });
            return true;
        }

        // –û–±—â–∞—è –æ—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
        modal.showError(
            message || "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.",
            {
                title: "–û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏",
                buttonText: "–ü–æ–Ω—è—Ç–Ω–æ",
            }
        );
        return true;
    }

    /**
     * –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
     */
    static handleLoginError(
        error: BackendErrorResponse,
        modal: ReturnType<typeof useModal>
    ) {
        const { message, code, statusCode } = error;

        // –ù–µ–≤–µ—Ä–Ω—ã–µ —É—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
        if (
            statusCode === 401 ||
            code === "INVALID_CREDENTIALS" ||
            message.includes("–Ω–µ–≤–µ—Ä–Ω—ã–µ") ||
            message.includes("invalid") ||
            message.includes("–Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π") ||
            message.includes("incorrect")
        ) {
            modal.showError(
                "–í–≤–µ–¥–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –Ω–µ–≤–µ—Ä–Ω—ã. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ email –∏ –ø–∞—Ä–æ–ª—å, –∑–∞—Ç–µ–º –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.",
                {
                    title: "–û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞",
                    buttonText: "–ü–æ–Ω—è—Ç–Ω–æ",
                }
            );
            return true;
        }

        // –ê–∫–∫–∞—É–Ω—Ç –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω
        if (statusCode === 423 || code === "ACCOUNT_LOCKED") {
            modal.showError(
                "–í–∞—à –∞–∫–∫–∞—É–Ω—Ç –≤—Ä–µ–º–µ–Ω–Ω–æ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É.",
                {
                    title: "–ê–∫–∫–∞—É–Ω—Ç –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω",
                    buttonText: "–ü–æ–Ω—è—Ç–Ω–æ",
                }
            );
            return true;
        }

        // –¢—Ä–µ–±—É–µ—Ç—Å—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ email
        if (statusCode === 403 || code === "EMAIL_NOT_VERIFIED") {
            modal.showError(
                "–î–ª—è –≤—Ö–æ–¥–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å email. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ—á—Ç—É –∏ –ø–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ –∏–∑ –ø–∏—Å—å–º–∞.",
                {
                    title: "–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ email",
                    buttonText: "–ü–æ–Ω—è—Ç–Ω–æ",
                }
            );
            return true;
        }

        // –û–±—â–∞—è –æ—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
        modal.showError(
            message || "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—Ö–æ–¥–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.",
            {
                title: "–û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞",
                buttonText: "–ü–æ–Ω—è—Ç–Ω–æ",
            }
        );
        return true;
    }

    /**
     * –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –ø–∞—Ä–æ–ª—è
     */
    static handlePasswordResetError(
        error: BackendErrorResponse,
        modal: ReturnType<typeof useModal>
    ) {
        const { message, code, statusCode } = error;

        // Email –Ω–µ –Ω–∞–π–¥–µ–Ω
        if (
            statusCode === 404 ||
            code === "USER_NOT_FOUND" ||
            message.includes("–Ω–µ –Ω–∞–π–¥–µ–Ω")
        ) {
            modal.showError(
                "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ç–∞–∫–∏–º email –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –Ω–∞–ø–∏—Å–∞–Ω–∏—è email.",
                {
                    title: "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω",
                    buttonText: "–ü–æ–Ω—è—Ç–Ω–æ",
                }
            );
            return true;
        }

        // –°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –ø–æ–ø—ã—Ç–æ–∫
        if (statusCode === 429 || code === "RATE_LIMITED") {
            modal.showError(
                "–°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –ø–æ–ø—ã—Ç–æ–∫ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –ø–∞—Ä–æ–ª—è. –ü–æ–¥–æ–∂–¥–∏—Ç–µ –Ω–µ–º–Ω–æ–≥–æ –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.",
                {
                    title: "–ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç",
                    buttonText: "–ü–æ–Ω—è—Ç–Ω–æ",
                }
            );
            return true;
        }

        // –û–±—â–∞—è –æ—à–∏–±–∫–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è
        modal.showError(
            message ||
                "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–∏ –ø–∞—Ä–æ–ª—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.",
            {
                title: "–û—à–∏–±–∫–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è",
                buttonText: "–ü–æ–Ω—è—Ç–Ω–æ",
            }
        );
        return true;
    }

    /**
     * –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ backend
     */
    static handleBackendError(
        error: any,
        context: "registration" | "login" | "passwordReset" | "general",
        modal: ReturnType<typeof useModal>
    ) {
        // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –æ—à–∏–±–∫—É –≤ BackendErrorResponse
        const backendError: BackendErrorResponse = {
            message:
                error.message ||
                error.response?.data?.message ||
                "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞",
            code: error.code || error.response?.data?.code,
            statusCode: error.statusCode || error.response?.status,
            field: error.field || error.response?.data?.field,
            details: error.details || error.response?.data?.details,
        };

        // –õ–æ–≥–∏—Ä—É–µ–º –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
        if (__DEV__) {
            console.group(`üö® Backend Error - ${context}`);
            console.error("Original error:", error);
            console.error("Processed error:", backendError);
            console.groupEnd();
        }

        // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
        switch (context) {
            case "registration":
                return this.handleRegistrationError(backendError, modal);
            case "login":
                return this.handleLoginError(backendError, modal);
            case "passwordReset":
                return this.handlePasswordResetError(backendError, modal);
            default:
                modal.showError(backendError.message, {
                    title: "–û—à–∏–±–∫–∞",
                    buttonText: "–ü–æ–Ω—è—Ç–Ω–æ",
                });
                return true;
        }
    }

    /**
     * –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –æ—à–∏–±–∫–∞ –æ—à–∏–±–∫–æ–π backend
     */
    static isBackendError(error: any): boolean {
        return (
            error &&
            (error.response ||
                error.statusCode ||
                error.code ||
                (error.message && typeof error.message === "string"))
        );
    }
}

export default BackendErrorService;
